plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.kotlin.ksp)
    id 'com.google.gms.google-services'
    alias(libs.plugins.dagger.hilt)
}

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))


android {
    namespace 'com.waxd.pos.fcmb'
    compileSdk 34

    defaultConfig {
        applicationId "com.waxd.pos.fcmb"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue 'string', 'api_key', localProperties['API_KEY']
            buildConfigField 'String', 'BASE_URL', localProperties['BASE_URL']
            buildConfigField 'String', 'FARMER_STORAGE_URL', localProperties['FARMER_STORAGE_URL']
            buildConfigField 'String', 'FARM_STORAGE_URL', localProperties['FARM_STORAGE_URL']
            buildConfigField 'String', 'ENCRYPTION_KEY', localProperties['ENCRYPTION_KEY']
            buildConfigField 'String', 'NEW_RELIC_TOKEN', localProperties['NEW_RELIC_TOKEN']
        }

        debug {
            resValue 'string', 'api_key', localProperties['API_KEY']
            buildConfigField 'String', 'BASE_URL', localProperties['BASE_URL']
            buildConfigField 'String', 'FARMER_STORAGE_URL', localProperties['FARMER_STORAGE_URL']
            buildConfigField 'String', 'FARM_STORAGE_URL', localProperties['FARM_STORAGE_URL']
            buildConfigField 'String', 'ENCRYPTION_KEY', localProperties['ENCRYPTION_KEY']
            buildConfigField 'String', 'NEW_RELIC_TOKEN', localProperties['NEW_RELIC_TOKEN']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    android.buildFeatures.dataBinding = true
    android.buildFeatures.buildConfig true
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx
    implementation libs.androidx.legacy.support.v4
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.fragment.ktx
    implementation libs.firebase.common.ktx
    implementation libs.firebase.storage.ktx
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    implementation libs.androidx.core.splashscreen
    //sdp
    implementation libs.sdp.android

    implementation(libs.github.fingerprintscannersdk){ changing = true }

    //Firebase
    implementation libs.firebase.auth.ktx // Use the latest version
    implementation 'com.google.firebase:firebase-firestore-ktx:25.1.2' // Use the latest version
    implementation platform('com.google.firebase:firebase-bom:33.6.0')
    implementation 'com.google.firebase:firebase-analytics'

    implementation 'com.google.android.gms:play-services-maps:19.0.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    // Hilt
    implementation(libs.hilt.android)
    kapt(libs.hilt.android.compiler)

    // DataStore
    implementation(libs.androidx.datastore.preferences)

    // Retrofit
    implementation("com.squareup.okhttp3:logging-interceptor:4.9.1")
    implementation("com.squareup.retrofit2:retrofit:2.9.0")
    implementation("com.squareup.retrofit2:converter-gson:2.9.0")

    // Glide
    implementation(libs.glide)

    //compressor
    implementation ("id.zelory:compressor:3.0.1")

}